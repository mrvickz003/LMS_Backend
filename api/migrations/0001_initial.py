# Generated by Django 5.1.3 on 2024-12-11 07:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile_number', models.IntegerField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=30, unique=True)),
                ('create_date', models.DateTimeField()),
                ('update_date', models.DateTimeField()),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_company', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownerOfCompany', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_company', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('NONE', 'None'), ('CUSM', 'Customer Meeting'), ('SCAL', 'Sales Call'), ('FLUP', 'Follow-Up'), ('PDEM', 'Product Demo'), ('PDIS', 'Proposal Discussion'), ('CSNG', 'Contract Signing'), ('FSES', 'Feedback Session'), ('TSES', 'Training Session'), ('NEVT', 'Networking Event'), ('LQCL', 'Lead Qualification Call'), ('OSES', 'Onboarding Session'), ('CLCH', 'Campaign Launch'), ('SUCL', 'Support Call'), ('CARY', 'Customer Anniversary'), ('RREM', 'Renewal Reminder'), ('CSSY', 'Customer Satisfaction Survey'), ('TMTG', 'Team Meeting'), ('GLRW', 'Goal Review'), ('PERW', 'Performance Review'), ('PPDN', 'Partnership Discussion'), ('BDAY', 'Birthday')], default='none', max_length=28)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_all_day', models.BooleanField(default=False)),
                ('location', models.URLField(blank=True, null=True)),
                ('meeting_url', models.URLField(blank=True, null=True)),
                ('recurrence', models.CharField(choices=[('NONE', 'None'), ('DALY', 'Daily'), ('WEEK', 'Weekly'), ('MONT', 'Monthly'), ('YEAR', 'Yearly')], default='none', max_length=10)),
                ('create_date', models.DateTimeField()),
                ('update_date', models.DateTimeField()),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_event', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_event', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='attending_events', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event', to='api.company')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_user', to='api.company'),
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('layout', models.JSONField()),
                ('create_date', models.DateTimeField()),
                ('update_date', models.DateTimeField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forms', to='api.company')),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_forms', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_forms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FormData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_data', models.JSONField()),
                ('create_date', models.DateTimeField()),
                ('update_date', models.DateTimeField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='form_data', to='api.company')),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_data', to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.form')),
                ('update_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FormFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('file_type', models.CharField(max_length=20)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='form_files', to='api.company')),
                ('form_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='api.formdata')),
            ],
        ),
    ]
